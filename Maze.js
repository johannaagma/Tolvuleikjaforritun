//TODO ætti þetta ekki að EKKI vera entity og vera bara einhver grunnlayer

// ==========
// MAZE STUFF
// ==========

"use strict";

/* jshint browser: true, devel: true, globalstrict: true */

/*
0        1         2         3         4         5         6         7         8
12345678901234567890123456789012345678901234567890123456789012345678901234567890
*/


// A generic contructor which accepts an arbitrary descriptor object
function Maze(descr) {
    this.nrow = this._maze[0].length;
    this.ncol = this._maze.length;
    this.cellWidth = g_gCanvas.width / this.ncol;
    this.cellHeight = g_gCanvas.height / this.nrow;

    this.sprite = this.sprite || g_sprites.map;
};

 Maze.prototype._maze = [
    [1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1],
    [1,0,1,1,1,0,1,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0,1,1,0,1],
    [1,0,1,0,1,0,1,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,0,0,1,1,0,1],
    [1,0,1,0,1,0,1,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,1,1,0,1,1,0,1],
    [1,0,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1],
    [1,0,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1],
    [1,0,1,0,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1],
    [1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,1],
    [1,0,1,0,1,0,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1],
    [1,0,1,1,1,0,1,1,0,1,1,0,1,0,0,0,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1],
    [1,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,0,1,1,0,0,0,0,1],
    [1,1,1,1,1,0,1,1,1,1,1,0,-1,0,0,0,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1],
    [1,1,1,1,1,0,1,1,1,1,1,0,-1,0,0,0,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1],
    [1,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,0,1,1,0,0,0,0,1],
    [1,0,1,1,1,0,1,1,0,1,1,0,1,0,0,0,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1],
    [1,0,1,0,1,0,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1],
    [1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,1],
    [1,0,1,0,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1],
    [1,0,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1],
    [1,0,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1],
    [1,0,1,0,1,0,1,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,1,1,0,1,1,0,1],
    [1,0,1,0,1,0,1,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,0,0,1,1,0,1],
    [1,0,1,1,1,0,1,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0,1,1,0,1],
    [1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1],
    [1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1]
];


// Maze.prototype._maze = [
//     ["q","q1","q1","q1","q1","q1","q1","q1","q1","e",0,0,0,"t",0,"y",0,0,0,"q","q1","q1","q1","q1","z","q8","q1","q1","q1","q1","e"],
//     ["t",0,0,0,0,0,0,0,0,"y",0,0,0,"t",0,"y",0,0,0,"t",0,0,0,0,"d","f",0,0,0,0,"y"],
//     ["t",0,"o","b","a",0,"o","a",0,"y",0,0,0,"t",0,"y",0,0,0,"t",0,"o","a",0,"p","s",0,"o","a",0,"y"],
//     ["t",0,"d",0,"f",0,"d","f",0,"y",0,0,0,"t",0,"y",0,0,0,"t",0,"d","f",0,0,0,0,"d","f",0,"y"],
//     ["t",0,"d",0,"f",0,"d","f",0,"y",0,0,0,"t",0,"y",0,0,0,"t",0,"d","p","b","b","a",0,"d","f",0,"y"],
//     ["t",0,"p","n","s",0,"p","s",0,"p","q1","q1","q1","s",0,"p","q1","q1","q1","s",0,"p","n","n","n","s",0,"d","f",0,"y"],
//     ["t",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"d","f",0,"y"],
//     ["t",0,"o","b","a",0,"o","b","b","b","b","b","b","a",0,"o","b","b","b","a",0,"o","a",0,"o","b","b","s","f",0,"y"],
//     ["t",0,"d",0,"f",0,"p","n","n","a","o","n","n","s",0,"p","n","n","n","s",0,"d","f",0,"p","n","n","a","f",0,"y"],
//     ["t",0,"d",0,"f",0,0,0,0,"d","f",0,0,0,0,0,0,0,0,0,0,"d","f",0,0,0,0,"d","f",0,"y"],
//     ["t",0,"d",0,"f",0,"o","a",0,"d","f",0,"q2","m","m","m","q10",0,"o","a",0,"d","f",0,"o","a",0,"d","f",0,"y"],
//     ["t",0,"p","n","s",0,"d","f",0,"p","s",0,"y",0,0,0,"t",0,"d","f",0,"p","s",0,"d","f",0,"p","s",0,"y"],
//     ["t",0,0,0,0,0,"d","f",0,0,0,0,"y",0,0,0,"t",0,"d","f",0,0,0,0,"d","f",0,0,0,0,"y"],
//     ["k","b","b","b","a",0,"d","p","b","b","a",0,-1,0,0,0,"t",0,"d","p","b","b","a",0,"d","p","b","b","a",0,"y"],
//     ["l","n","n","n","s",0,"d","o","n","n","s",0,-1,0,0,0,"t",0,"d","o","n","n","s",0,"d","o","n","n","s",0,"y"],
//     ["t",0,0,0,0,0,"d","f",0,0,0,0,"y",0,0,0,"t",0,"d","f",0,0,0,0,"d","f",0,0,0,0,"y"],
//     ["t",0,"o","b","a",0,"d","f",0,"o","a",0,"y",0,0,0,"t",0,"d","f",0,"o","a",0,"d","f",0,"o","a",0,"y"],
//     ["t",0,"d",0,"f",0,"p","s",0,"d","f",0,"v","q1","q1","q1","q4",0,"p","s",0,"d","f",0,"p","s",0,"d","f",0,"y"],
//     ["t",0,"d",0,"f",0,0,0,0,"d","f",0,0,0,0,0,0,0,0,0,0,"d","f",0,0,0,0,"d","f",0,"y"],
//     ["t",0,"d",0,"f",0,"o","b","b","s","p","b","b","a",0,"o","b","b","b","a",0,"d","f",0,"o","b","b","s","f",0,"y"],
//     ["t",0,"p","n","s",0,"p","n","n","n","n","n","n","s",0,"p","n","n","n","s",0,"p","s",0,"p","n","n","a","f",0,"y"],
//     ["t",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"d","f",0,"y"],
//     ["t",0,"o","b","a",0,"o","a",0,"o","m","m","m","a",0,"o","m","m","m","a",0,"o","b","b","b","a",0,"d","f",0,"y"],
//     ["t",0,"d",0,"f",0,"d","f",0,"y",0,0,0,"t",0,"y",0,0,0,"t",0,"d","o","n","n","s",0,"d","f",0,"y"],
//     ["t",0,"d",0,"f",0,"d","f",0,"y",0,0,0,"t",0,"y",0,0,0,"t",0,"d","f",0,0,0,0,"d","f",0,"y"],
//     ["t",0,"p","n","s",0,"p","s",0,"y",0,0,0,"t",0,"y",0,0,0,"t",0,"p","s",0,"o","a",0,"p","s",0,"y"],
//     ["t",0,0,0,0,0,0,0,0,"y",0,0,0,"t",0,"y",0,0,0,"t",0,0,0,0,"d","f",0,0,0,0,"y"],
//     ["w","m","m","m","m","m","m","m","m","r",0,0,0,"t",0,"y",0,0,0,"w","m","m","m","m","x","q9","m","m","m","m","r"]
// ];

// explains values in the maze
Maze.prototype.PATH = 0;
Maze.prototype.DOOR = -1;

    
Maze.prototype.update = function (du) {

};

Maze.prototype.getValue = function (col, row) {
    return this._maze[col][row];
};

Maze.prototype.render = function (ctx) {
    this.sprite.drawWrappedCentredAt(ctx, 252, 280, 0);    
};